import unittest

from naming_convert import *


class MyTestCase(unittest.TestCase):
    def test_to_camel_case(self):
        self.assertEqual(to_camel_case('hello_world'), 'helloWorld')
        self.assertEqual(to_camel_case('Hello_World'), 'helloWorld')
        self.assertEqual(to_camel_case('helloWorld'), 'helloWorld')
        self.assertEqual(to_camel_case('HelloWorld'), 'helloWorld')
        self.assertEqual(to_camel_case('hello world'), 'helloWorld')
        self.assertEqual(to_camel_case('Hello World'), 'helloWorld')
        self.assertEqual(to_camel_case('hello.world'), 'helloWorld')
        self.assertEqual(to_camel_case('Hello.World'), 'helloWorld')
        self.assertEqual(to_camel_case('hello-world'), 'helloWorld')
        self.assertEqual(to_camel_case('Hello-World'), 'helloWorld')
        self.assertEqual(to_camel_case('Hello World'), 'helloWorld')
        self.assertEqual(to_camel_case('hello-world'), 'helloWorld')

    def test_to_pascal_case(self):
        self.assertEqual(to_pascal_case('hello_world'), 'HelloWorld')
        self.assertEqual(to_pascal_case('Hello_World'), 'HelloWorld')
        self.assertEqual(to_pascal_case('helloWorld'), 'HelloWorld')
        self.assertEqual(to_pascal_case('HelloWorld'), 'HelloWorld')
        self.assertEqual(to_pascal_case('hello world'), 'HelloWorld')
        self.assertEqual(to_pascal_case('Hello World'), 'HelloWorld')
        self.assertEqual(to_pascal_case('hello.world'), 'HelloWorld')
        self.assertEqual(to_pascal_case('Hello.World'), 'HelloWorld')
        self.assertEqual(to_pascal_case('hello-world'), 'HelloWorld')
        self.assertEqual(to_pascal_case('Hello-World'), 'HelloWorld')
        self.assertEqual(to_pascal_case('Hello World'), 'HelloWorld')
        self.assertEqual(to_pascal_case('hello-world'), 'HelloWorld')

    def test_to_snake_case(self):
        self.assertEqual(to_snake_case('hello_world'), 'hello_world')
        self.assertEqual(to_snake_case('Hello_World'), 'hello_world')
        self.assertEqual(to_snake_case('helloWorld'), 'hello_world')
        self.assertEqual(to_snake_case('HelloWorld'), 'hello_world')
        self.assertEqual(to_snake_case('hello world'), 'hello_world')
        self.assertEqual(to_snake_case('Hello World'), 'hello_world')
        self.assertEqual(to_snake_case('hello.world'), 'hello_world')
        self.assertEqual(to_snake_case('Hello.World'), 'hello_world')
        self.assertEqual(to_snake_case('hello-world'), 'hello_world')
        self.assertEqual(to_snake_case('Hello-World'), 'hello_world')
        self.assertEqual(to_snake_case('Hello World'), 'hello_world')
        self.assertEqual(to_snake_case('hello-world'), 'hello_world')

    def test_to_screaming_snake_case(self):
        self.assertEqual(to_screaming_snake_case('hello_world'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('Hello_World'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('helloWorld'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('HelloWorld'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('hello world'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('Hello World'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('hello.world'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('Hello.World'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('hello-world'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('Hello-World'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('Hello World'), 'HELLO_WORLD')
        self.assertEqual(to_screaming_snake_case('hello-world'), 'HELLO_WORLD')

    def test_to_kebab_case(self):
        self.assertEqual(to_kebab_case('hello_world'), 'hello-world')
        self.assertEqual(to_kebab_case('Hello_World'), 'hello-world')
        self.assertEqual(to_kebab_case('helloWorld'), 'hello-world')
        self.assertEqual(to_kebab_case('HelloWorld'), 'hello-world')
        self.assertEqual(to_kebab_case('hello world'), 'hello-world')
        self.assertEqual(to_kebab_case('Hello World'), 'hello-world')
        self.assertEqual(to_kebab_case('hello.world'), 'hello-world')
        self.assertEqual(to_kebab_case('Hello.World'), 'hello-world')
        self.assertEqual(to_kebab_case('hello-world'), 'hello-world')
        self.assertEqual(to_kebab_case('Hello-World'), 'hello-world')
        self.assertEqual(to_kebab_case('Hello World'), 'hello-world')
        self.assertEqual(to_kebab_case('hello-world'), 'hello-world')

    def test_to_screaming_kebab_case(self):
        self.assertEqual(to_screaming_kebab_case('hello_world'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('Hello_World'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('helloWorld'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('HelloWorld'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('hello world'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('Hello World'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('hello.world'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('Hello.World'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('hello-world'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('Hello-World'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('Hello World'), 'HELLO-WORLD')
        self.assertEqual(to_screaming_kebab_case('hello-world'), 'HELLO-WORLD')

    def test_to_train_case(self):
        self.assertEqual(to_train_case('hello_world'), 'Hello-World')
        self.assertEqual(to_train_case('Hello_World'), 'Hello-World')
        self.assertEqual(to_train_case('helloWorld'), 'Hello-World')
        self.assertEqual(to_train_case('HelloWorld'), 'Hello-World')
        self.assertEqual(to_train_case('hello world'), 'Hello-World')
        self.assertEqual(to_train_case('Hello World'), 'Hello-World')
        self.assertEqual(to_train_case('hello.world'), 'Hello-World')
        self.assertEqual(to_train_case('Hello.World'), 'Hello-World')
        self.assertEqual(to_train_case('hello-world'), 'Hello-World')
        self.assertEqual(to_train_case('Hello-World'), 'Hello-World')
        self.assertEqual(to_train_case('Hello World'), 'Hello-World')
        self.assertEqual(to_train_case('hello-world'), 'Hello-World')

    def test_to_dot_case(self):
        self.assertEqual(to_dot_case('hello_world'), 'hello.world')
        self.assertEqual(to_dot_case('Hello_World'), 'hello.world')
        self.assertEqual(to_dot_case('helloWorld'), 'hello.world')
        self.assertEqual(to_dot_case('HelloWorld'), 'hello.world')
        self.assertEqual(to_dot_case('hello world'), 'hello.world')
        self.assertEqual(to_dot_case('Hello World'), 'hello.world')
        self.assertEqual(to_dot_case('hello.world'), 'hello.world')
        self.assertEqual(to_dot_case('Hello.World'), 'hello.world')
        self.assertEqual(to_dot_case('hello-world'), 'hello.world')
        self.assertEqual(to_dot_case('Hello-World'), 'hello.world')
        self.assertEqual(to_dot_case('Hello World'), 'hello.world')
        self.assertEqual(to_dot_case('hello-world'), 'hello.world')

    def test_to_screaming_dot_case(self):
        self.assertEqual(to_screaming_dot_case('hello_world'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('Hello_World'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('helloWorld'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('HelloWorld'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('hello world'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('Hello World'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('hello.world'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('Hello.World'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('hello-world'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('Hello-World'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('Hello World'), 'HELLO.WORLD')
        self.assertEqual(to_screaming_dot_case('hello-world'), 'HELLO.WORLD')

    def test_to_title_case(self):
        self.assertEqual(to_title_case('hello_world'), 'Hello World')
        self.assertEqual(to_title_case('Hello_World'), 'Hello World')
        self.assertEqual(to_title_case('helloWorld'), 'Hello World')
        self.assertEqual(to_title_case('HelloWorld'), 'Hello World')
        self.assertEqual(to_title_case('hello world'), 'Hello World')
        self.assertEqual(to_title_case('Hello World'), 'Hello World')
        self.assertEqual(to_title_case('hello.world'), 'Hello World')
        self.assertEqual(to_title_case('Hello.World'), 'Hello World')
        self.assertEqual(to_title_case('hello-world'), 'Hello World')
        self.assertEqual(to_title_case('Hello-World'), 'Hello World')
        self.assertEqual(to_title_case('Hello World'), 'Hello World')
        self.assertEqual(to_title_case('hello-world'), 'Hello World')

if __name__ == '__main__':
    unittest.main()
